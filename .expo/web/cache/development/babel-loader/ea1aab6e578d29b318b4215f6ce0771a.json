{"ast":null,"code":"import PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nexport var scale = function scale(whatToScale) {\n  var _useWindowDimensions = useWindowDimensions(),\n    height = _useWindowDimensions.height,\n    width = _useWindowDimensions.width,\n    fontScale = _useWindowDimensions.fontScale,\n    scale = _useWindowDimensions.scale;\n  var newSize = whatToScale * scale;\n  if (Platform.OS === 'ios') {\n    return Math.round(PixelRatio.roundToNearestPixel(newSize));\n  } else {\n    return Math.round(PixelRatio.roundToNearestPixel(newSize)) - 2;\n  }\n};","map":{"version":3,"names":["scale","whatToScale","useWindowDimensions","height","width","fontScale","newSize","Platform","OS","Math","round","PixelRatio","roundToNearestPixel"],"sources":["/Users/eliasbinder/Desktop/Vorlesungen/Semester 2/Programming Project/Test/Webstorm/TheMensaThing/util/ScaleUtil.ts"],"sourcesContent":["import {PixelRatio, Platform, useWindowDimensions} from \"react-native\";\n\nexport const scale = (whatToScale: number): number => {\n    const { height, width, fontScale, scale } = useWindowDimensions();\n\n    const newSize = whatToScale * scale;\n\n    if (Platform.OS === 'ios') {\n        return Math.round(PixelRatio.roundToNearestPixel(newSize))\n    } else {\n        return Math.round(PixelRatio.roundToNearestPixel(newSize)) - 2\n    }\n}\n"],"mappings":";;;AAEA,OAAO,IAAMA,KAAK,GAAG,eAACC,WAAmB,EAAa;EAClD,2BAA4CC,mBAAmB,EAAE;IAAzDC,MAAM,wBAANA,MAAM;IAAEC,KAAK,wBAALA,KAAK;IAAEC,SAAS,wBAATA,SAAS;IAAEL,KAAK,wBAALA,KAAK;EAEvC,IAAMM,OAAO,GAAGL,WAAW,GAAGD,KAAK;EAEnC,IAAIO,QAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;IACvB,OAAOC,IAAI,CAACC,KAAK,CAACC,UAAU,CAACC,mBAAmB,CAACN,OAAO,CAAC,CAAC;EAC9D,CAAC,MAAM;IACH,OAAOG,IAAI,CAACC,KAAK,CAACC,UAAU,CAACC,mBAAmB,CAACN,OAAO,CAAC,CAAC,GAAG,CAAC;EAClE;AACJ,CAAC"},"metadata":{},"sourceType":"module"}