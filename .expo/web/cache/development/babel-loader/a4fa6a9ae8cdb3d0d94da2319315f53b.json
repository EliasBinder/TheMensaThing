{"ast":null,"code":"import PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nexport var scale = function scale(whatToScale) {\n  var newSize = deviceWidth > 450 ? whatToScale : whatToScale * (deviceWidth / 450);\n  var _useWindowDimensions = useWindowDimensions(),\n    height = _useWindowDimensions.height,\n    width = _useWindowDimensions.width;\n  if (Platform.OS === 'ios') {\n    return Math.round(PixelRatio.roundToNearestPixel(newSize));\n  } else {\n    return Math.round(PixelRatio.roundToNearestPixel(newSize)) - 2;\n  }\n};","map":{"version":3,"names":["scale","whatToScale","newSize","deviceWidth","useWindowDimensions","height","width","Platform","OS","Math","round","PixelRatio","roundToNearestPixel"],"sources":["/Users/eliasbinder/Desktop/Vorlesungen/Semester 2/Programming Project/Test/Webstorm/TheMensaThing/util/ScaleUtil.ts"],"sourcesContent":["import {PixelRatio, Platform, useWindowDimensions} from \"react-native\";\n\nexport const scale = (whatToScale: number): number => {\n    const newSize = deviceWidth > 450 ? whatToScale : whatToScale * (deviceWidth / 450);\n\n    const { height, width } = useWindowDimensions();\n\n    if (Platform.OS === 'ios') {\n        return Math.round(PixelRatio.roundToNearestPixel(newSize))\n    } else {\n        return Math.round(PixelRatio.roundToNearestPixel(newSize)) - 2\n    }\n}\n"],"mappings":";;;AAEA,OAAO,IAAMA,KAAK,GAAG,SAARA,KAAK,CAAIC,WAAmB,EAAa;EAClD,IAAMC,OAAO,GAAGC,WAAW,GAAG,GAAG,GAAGF,WAAW,GAAGA,WAAW,IAAIE,WAAW,GAAG,GAAG,CAAC;EAEnF,2BAA0BC,mBAAmB,EAAE;IAAvCC,MAAM,wBAANA,MAAM;IAAEC,KAAK,wBAALA,KAAK;EAErB,IAAIC,QAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;IACvB,OAAOC,IAAI,CAACC,KAAK,CAACC,UAAU,CAACC,mBAAmB,CAACV,OAAO,CAAC,CAAC;EAC9D,CAAC,MAAM;IACH,OAAOO,IAAI,CAACC,KAAK,CAACC,UAAU,CAACC,mBAAmB,CAACV,OAAO,CAAC,CAAC,GAAG,CAAC;EAClE;AACJ,CAAC"},"metadata":{},"sourceType":"module"}