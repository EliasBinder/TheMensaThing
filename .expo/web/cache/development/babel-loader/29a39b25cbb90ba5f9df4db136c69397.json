{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar _Dimensions$get = Dimensions.get('window'),\n  deviceWidth = _Dimensions$get.width;\nexport var scale = function scale(whatToScale) {\n  var newSize = whatToScale * (deviceWidth / 375);\n  if (Platform.OS === 'ios') {\n    return Math.round(PixelRatio.roundToNearestPixel(newSize));\n  } else {\n    return Math.round(PixelRatio.roundToNearestPixel(newSize)) - 2;\n  }\n};","map":{"version":3,"names":["Dimensions","get","deviceWidth","width","scale","whatToScale","newSize","Platform","OS","Math","round","PixelRatio","roundToNearestPixel"],"sources":["/Users/eliasbinder/Desktop/Vorlesungen/Semester 2/Programming Project/Test/Webstorm/TheMensaThing/util/ScaleUtil.ts"],"sourcesContent":["import {Dimensions, PixelRatio, Platform} from \"react-native\";\n\nconst {\n    width: deviceWidth\n} = Dimensions.get('window');\n\nexport const scale = (whatToScale: number): number => {\n    const newSize = whatToScale * (deviceWidth / 375);\n    if (Platform.OS === 'ios') {\n        return Math.round(PixelRatio.roundToNearestPixel(newSize))\n    } else {\n        return Math.round(PixelRatio.roundToNearestPixel(newSize)) - 2\n    }\n}\n"],"mappings":";;;AAEA,sBAEIA,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC;EADjBC,WAAW,mBAAlBC,KAAK;AAGT,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAK,CAAIC,WAAmB,EAAa;EAClD,IAAMC,OAAO,GAAGD,WAAW,IAAIH,WAAW,GAAG,GAAG,CAAC;EACjD,IAAIK,QAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;IACvB,OAAOC,IAAI,CAACC,KAAK,CAACC,UAAU,CAACC,mBAAmB,CAACN,OAAO,CAAC,CAAC;EAC9D,CAAC,MAAM;IACH,OAAOG,IAAI,CAACC,KAAK,CAACC,UAAU,CAACC,mBAAmB,CAACN,OAAO,CAAC,CAAC,GAAG,CAAC;EAClE;AACJ,CAAC"},"metadata":{},"sourceType":"module"}